@startuml
title Representational Element Definitions

class GlobalFilter << (C,pink) component observer >> {
  ~ UIStore
  ==observes==
  ~ globalFilters
  ==props==
  category
  name
  ==actions==
  ~ updateGlobalFilters()
}

class UserController << (C,pink) component observer >> {
  ~ UIStore
  ==observes==
  ~ userDetails
  ==props==
  userDetails
  ==actions==
  ~ logout()
}

class DiagramConfigsModal << (C,red) container observer >> {
  ~ UIStore
  ==observes==
  ~ diagramConfigModal
  ~ isDiagramConfigModalActive
  ==props==
  isDiagramConfigModalActive
}

class GenericConfigs << (C,pink) component observer >> {
  ~ DataStore
  ~ UIStore
  ==observes==
  ~ sourcesAvailable
  ~ diagramConfigModal
  ==props==
  sourcesAvailable
  diagramType
  axisChoices
  useColor
  colorBy
  enableLegends
  enableTooltip
  enableAnimation
  diagramType
  ==actions==
  ~ updateDiagramConfigs()
}

class TimeLinePlotConfigs  << (C,pink) component observer >> {
  ~ UIStore
  ==observes==
  ~ diagramConfigModal
  ==props==
  lineWidth
  lineOpacity
  enablePoints
  enableShapedPoints
  pointSize
  pointOpacity
  enableArea
  areaOpacity
  ==actions==
  ~ updateDiagramConfigs()
}

class ScatterPlotConfigs  << (C,pink) component observer >> {
  ~ UIStore
  ==observes==
  ~ diagramConfigModal
  ==props==
  enableShapedPoints
  pointSize
  pointOpacity
  ==actions==
  ~ updateDiagramConfigs()
}

class NetworkPlotConfigs  << (C,pink) component observer >> {
  ~ UIStore
  ==observes==
  ~ diagramConfigModal
  ==props==
  lineWidth
  lineOpacity
  enableShapedPoints
  pointSize
  pointOpacity
  ==actions==
  ~ updateDiagramConfigs()
}

class TimeLinePlot  << (C,pink) component observer >> {
  ~ DataStore
  ~ UIStore

  - zoomLevel
  - isMaximized
  ==observes==
  ~ data
  ~ diagramConfigs
  ==props==
  lineWidth
  lineOpacity
  enablePoints
  enableShapedPoints
  pointSize
  pointOpacity
  enableArea
  areaOpacity
}

class ScatterPlot  << (C,pink) component observer >> {
  ~ DataStore
  ~ UIStore

  - zoomLevel
  - isMaximized
  ==observes==
  ~ data
  ~ diagramConfigs
  ==props==
  enableShapedPoints
  pointSize
  pointOpacity
}

class NetworkPlot  << (C,pink) component observer >> {
  ~ DataStore
  ~ UIStore

  - zoomLevel
  - isMaximized
  ==observes==
  ~ data
  ~ diagramConfigs
  ==props==
  lineWidth
  lineOpacity
  enableShapedPoints
  pointSize
  pointOpacity
}

class DiagramControl << (C,pink) component >> {
  ==actions==
  - configureDiagram()
  - configureFilters()
  - maximize()
  - dispose()
}

class BrushBar << (C,pink) component observer >> {
  ~ DataStore
  ==observes==
  ~ availableRange
  ~ currentRanges
  ==props==
  availableRange
  currentRanges
  ==action==
  ~ updateCurrentRangeTo()
}

class NewDiagramButton << (C,pink) component >> {
  ~ UIStore
  ==actions==
  ~ newDiagram()
}

@enduml
